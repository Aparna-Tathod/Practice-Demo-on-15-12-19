AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template will create a IAM Role, Launch an ec2 instance and atttach the Role to the Ec2
Parameters:
  keyName:
    Description: EC2 insttance SSH key
    Type: String
  InstanceType:
    Description: EC2 insttance speces configuration
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.small
      - t2.micro
  LatestLinuxAmiId:
    type: 'AWS::SSM::parametter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  EnveronmentName:
    Description: SDLC Environmentt Value e.g. dev/qa prod.
    Type: String
  VpcId: 
    Description: VPC Id
    Type: String  
  SubnetId: 
    Description: Subnet Id
    Type: String         
Metadata:
  
Mappings:
  
Conditions:
  
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName 
      DisableApiTermination: 
      ImageId: !Ref LatestLinuxAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SSHAccessSG
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref EnvironmentName, 'ec2-Instance' ] ]

  SSHAccessSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ "-", [ !Ref EnvironmentName, 'ec2-sg']] 
      GroupDescription: Allow SSH access from anywhere
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp 
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref EnvironmentName, ' SSHAccess '] ]        

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: String
      Path: /
      Roles: 
        - !Ref ListS3BucketsIAMRole

  ListS3BucketsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ListS3BucketsPolicy
      PolicyDocument:
        statement:
          - Effect: Allow
            Action:
              - 's3:List*'
              - 'ec2:*'
            Resource: '*'
           
      Roles:
       - !Ref ListS3BucketsIAMRole
  ListS3BucketsIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:  
                Service:
                  - ec2.amazonaws.com
      Path: /           
      
Outputs:
  EC2:
    Description: Command to SSH the EC2 Instance
    Value: !Join [ "", [ " ssh -i ", !Ref KeyName , ".pem ec2-user@", !GetAtt EC2Instance.PublicIp ] ]
